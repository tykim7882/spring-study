<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<context:component-scan
		base-package="com.springbook.view"></context:component-scan>

	<!-- 
	httpMessageConverter : json, xml 변환처리
	pom.xml : jackson lib 등록  
	@ResponseBody : 자바객체를 http응답 프로토콜의 몸체로 변환
	mvc:annotation-driven => 스프링컨테이너가 MappingJackson2HttpMessageConverter 변환기를 생성하도록 추가
	@ResponseBody 가 적용된 메소드의 결과는 JSON으로 변환되어 Http응답 보디에 설정됨
	@JsonIgnore : JSON변환시 특정변수 제외, VO의 Getter 메소드 위에 설정 
	
	XML변환 : JAXB2 API에서 제공(java6 이후 기본 포함) 
	 - VO의 클래스 위에 @XmlAccessorType(XmlAccessType.FIELD), 
	 멤버변수에  @XMLAttribute(속성으로 표현)  / @XMLTransient(변환제외대상) 추가하면 됨   
	-->
	<mvc:annotation-driven></mvc:annotation-driven>

	<!-- 어노테이션 기반의 예외처리 @ExceptionHandler <mvc:annotation-driven></mvc:annotation-driven> -->

	<!-- XML 예외처리 설정 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArithmeticException">
					/common/arithmeticError.jsp
				</prop>
				<prop key="java.lang.NullPointerException">
					/common/nullPointerError.jsp
				</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="/common/error.jsp"></property>
	</bean>

	<!-- 다국어 설정 bean-id messageSource 고정값 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message.messageSource</value>
			</list>
		</property>
	</bean>
	<!-- LocaleResolver 등록 bean-id : localeResolver 고정값 -->
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
	<!-- LocaleChangeInterceptor 등록 : Locale 변경시 -->
	<mvc:interceptors>
		<bean
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"></property>
		</bean>
	</mvc:interceptors>


	<!-- 파일 업로드 설정 -->
	<!-- bean id가 multipartResolver 로 정해져있다!!! DispatcherServlet이 특정이름으로 등록된 
		CommonsMultipartResolver 객체만 인식하도록 되어있음. -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000"></property>
	</bean>

	<!-- @Controller : DispatcherServlet 이 인식하는 컨트롤러 객체로 만들어 메모리에 생성 -->
	<!-- @Controller 사용하지 않는 경우에는 Controller 인터페이스 구현 및 handleRequest 재정의 필요함 -->
	<!-- public class InsertBoardController implements Controller.... -->
	<!-- HandlerMapping등록 <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"> 
		<property name="mappings"> <props> <prop key="/login.do">login</prop> <prop 
		key="/getBoardList.do">getBoardList</prop> <prop key="/getBoard.do">getBoard</prop> 
		<prop key="/insertBoard.do">insertBoard</prop> <prop key="/updateBoard.do">updateBoard</prop> 
		<prop key="/deleteBoard.do">deleteBoard</prop> <prop key="/logout.do">logout</prop> 
		</props> </property> </bean> -->


	<!-- Controller 등록 <bean id="login" class="com.springbook.view.user.LoginController"></bean> 
		<bean id="getBoardList" class="com.springbook.view.board.GetBoardListController"></bean> 
		<bean id="getBoard" class="com.springbook.view.board.GetBoardController"></bean> 
		<bean id="insertBoard" class="com.springbook.view.board.InsertBoardController"></bean> 
		<bean id="updateBoard" class="com.springbook.view.board.UpdateBoardController"></bean> 
		<bean id="deleteBoard" class="com.springbook.view.board.DeleteBoardController"></bean> 
		<bean id="logout" class="com.springbook.view.user.LogoutController"></bean> -->

	<!-- ViewResolver 등록 -->
	<!-- WEB-INF/ 는 브라우저에서 접근 불가능, 직접적인 jsp 호출 차단 redirect: ViewResolver 설정을 
		무시 -->
	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/board/"></property> <property name="suffix" 
		value=".jsp"></property> </bean> -->
</beans>
